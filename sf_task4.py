# -*- coding: utf-8 -*-
"""sf_task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TZw_GJMBFmNmrPwlpic35p6IxWiSjxF3

# **Graduate Rotational Internship Program @ The Sparks Foundation** 
# **Data Science and Business Analytics Intern**

# **Exploratory Data Analysis - Terrorism**
# **(Level - Intermediate)**

# Perform ‘Exploratory Data Analysis’ on dataset ‘Global Terrorism’ 
# ● As a security/defense analyst, try to find out the hot zone of terrorism. 
# ● What all security issues and insights you can derive by EDA? 
# ● You can choose any of the tool of your choice 
# (Python/R/Tableau/PowerBI/Excel/SAP/SAS) 
# ● Dataset: https://bit.ly/2TK5Xn5

# Author - ***DIVYA JANANI.S***

# **What is Exploratory Data Analysis (EDA) ?**
# EDA is a phenomenon under data analysis used for gaining a better understanding of data aspects like:
# – main features of data
# – variables and relationships that hold between them
# – identifying which variables are important for our problem

# We shall look at various exploratory data analysis methods like:

# – Descriptive Statistics, which is a way of giving a brief overview of the  dataset we are dealing with, including some measures and features of the sample.
# – Grouping data [Basic grouping with group by]
# – Univariant and Bivariant analysis
# – Correlation and correlation methods

# IMPORTING NECESSARY PYTHON LIBRARIES
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn

"""# LOADING THE DATASET"""

df=pd.read_csv("/content/globalterrorismdb_0718dist.csv",encoding='ISO-8859-1')
df.head()

"""# EXPLORATORY DATA ANALYSIS"""

df.shape # chedking the shape of the dataset

df.columns.values # checking the name of the columns

df.rename(columns={'iyear':'Year','imonth':'Month','iday':"day",'gname':'Group','country_txt':'Country','region_txt':'Region','provstate':'State','city':'City','latitude':'latitude',
    'longitude':'longitude','summary':'summary','attacktype1_txt':'Attacktype','targtype1_txt':'Targettype','weaptype1_txt':'Weapon','nkill':'kill',
     'nwound':'Wound'},inplace=True)

data = df[['Year','Month','day','Country','State','Region','City','latitude','longitude',"Attacktype",'kill',
               'Wound','target1','summary','Group','Targettype','Weapon','motive']]

data.isnull().sum()    # checking the null values

"""# HANDLING THE NULL VALUES USING FILLNA()"""

data['Wound'] = data['Wound'].fillna(0)
data['kill'] = data['kill'].fillna(0)

data['Casualities'] = data['kill'] + data['Wound']

data.describe()

data.corr()

data=data.drop(['latitude','longitude'],axis=1)

"""# VISUALIZATIONS"""

plt.figure(figsize=(10,8))
sns.heatmap(data.corr(),annot=True,cmap='magma')
plt.title("Correlation Heatmap")
plt.show()

year = data['Year'].unique()
years_count = data['Year'].value_counts(dropna = False).sort_index()
plt.figure(figsize = (20,10))
sns.barplot(x = year,
           y = years_count,
           palette = "tab10")
plt.xticks(rotation = 50)
plt.xlabel('Attacking Year',fontsize=20)
plt.ylabel('Number of Attacks Each Year',fontsize=20)
plt.title('Attacks per Year',fontsize=30)
plt.show()

pd.crosstab(data.Year, data.Region).plot(kind='area',stacked=False,figsize=(20,10))
plt.title('Terrorist Activities By Region In Each Year',fontsize=25)
plt.ylabel('Number of Attacks',fontsize=20)
plt.xlabel("Year",fontsize=20)
plt.show()

attack = data.Country.value_counts()[:10]
attack

data.Group.value_counts()[1:10]

plt.subplots(figsize=(20,10))
sns.barplot(data['Country'].value_counts()[:10].index,data['Country'].value_counts()[:10].values,palette='plasma')
plt.title('Top Countries Affected')
plt.xlabel('Countries')
plt.ylabel('Count')
plt.xticks(rotation = 50)
plt.show()

df = data[['Year','kill']].groupby(['Year']).sum()
fig, ax4 = plt.subplots(figsize=(20,10))
df.plot(kind='bar',alpha=0.7,ax=ax4)
plt.xticks(rotation = 50)
plt.title("People Died Due To Attack",fontsize=25)
plt.ylabel("Number of killed peope",fontsize=20)
plt.xlabel('Year',fontsize=20)
top_side = ax4.spines["top"]
top_side.set_visible(False)
right_side = ax4.spines["right"]
right_side.set_visible(False)

data['City'].value_counts().to_frame().sort_values('City',axis=0,ascending=False).head(10).plot(kind='bar',figsize=(20,10),color='red')
plt.xticks(rotation = 50)
plt.xlabel("City",fontsize=15)
plt.ylabel("Number of attack",fontsize=15)
plt.title("Top 10 most effected city",fontsize=20)
plt.show()

data['Attacktype'].value_counts().plot(kind='bar',figsize=(20,10),color='black')
plt.xticks(rotation = 50)
plt.xlabel("Attacktype",fontsize=15)
plt.ylabel("Number of attack",fontsize=15)
plt.title("Name of attacktype",fontsize=20)
plt.show()

data[['Attacktype','kill']].groupby(["Attacktype"],axis=0).sum().plot(kind='bar',figsize=(20,10),color=['darkslateblue'])
plt.xticks(rotation=50)
plt.title("Number of killed ",fontsize=20)
plt.ylabel('Number of people',fontsize=15)
plt.xlabel('Attack type',fontsize=15)
plt.show()

data[['Attacktype','Wound']].groupby(["Attacktype"],axis=0).sum().plot(kind='bar',figsize=(20,10),color=['cyan'])
plt.xticks(rotation=50)
plt.title("Number of wounded  ",fontsize=20)
plt.ylabel('Number of people',fontsize=15)
plt.xlabel('Attack type',fontsize=15)
plt.show()

data['Group'].value_counts().to_frame().drop('Unknown').head(10).plot(kind='bar',color='green',figsize=(20,10))
plt.title("Top 10 terrorist group attack",fontsize=20)
plt.xlabel("terrorist group name",fontsize=15)
plt.ylabel("Attack number",fontsize=15)
plt.xticks(rotation=70)
plt.show()

data[['Group','kill']].groupby(['Group'],axis=0).sum().drop('Unknown').sort_values('kill',ascending=False).head(10).plot(kind='bar',color='orange',figsize=(20,10))
plt.title("Top 10 terrorist group attack",fontsize=20)
plt.xlabel("terrorist group name",fontsize=15)
plt.ylabel("No of killed people",fontsize=15)
plt.show()

df=data[['Group','Country','kill']]
df=df.groupby(['Group','Country'],axis=0).sum().sort_values('kill',ascending=False).drop('Unknown').reset_index().head(10)
df

df1=data[['Group','City','kill']]
df2=df1.groupby(['Group','City'],axis=0).sum().sort_values('kill',ascending=False).drop('Unknown').reset_index().head(10)
df2

kill = data.loc[:,'kill']
print('Number of people killed by terror attack:', int(sum(kill.dropna())))

typeKill = data.pivot_table(columns='Attacktype', values='kill', aggfunc='sum')
typeKill

countryKill = data.pivot_table(columns='Country', values='kill', aggfunc='sum')
countryKill

"""# **Conclusion from the above derived insights:**

Country with the most attacks: **El Salvador**

City with the most attacks: **Unknown**

Region with  most attacks:  **South America**

Year with the most attacks: **1984**

Group with the most attacks: **Shining Path (SL)**

Most Attack Types: **Armed Assault**
"""